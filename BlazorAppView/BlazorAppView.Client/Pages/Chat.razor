@page "/chat"

@inject NavigationManager NavigationManager
@rendermode InteractiveWebAssembly

@code {
    private HubConnection _hubConnection;
    private List<string> _messages = new();

    private string _userName;
    private string _roomName;
    private string _message;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chat"))
            .Build();

        _hubConnection.On<string, string>("ReceiveMessage", (userName, message) =>
        {
            var endodedMsg = $"{userName}: {message}";
            _messages.Add(endodedMsg);

            StateHasChanged();
        });

        await _hubConnection.StartAsync();
    }

    Task SendMessage() => _hubConnection.SendAsync("SendAll", _userName, _message);

    public bool IsConnected => _hubConnection.State == HubConnectionState.Connected;
}

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to my chat app
@if (IsConnected)
{
    <input type="text" @bind="_userName" />
    <input type="text" @bind="_message" />
    <button @onclick="SendMessage">Send</button>

    <ul>
        @foreach (var message in _messages)
        {
            <li>@message</li>
        }
    </ul>
}